@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue.
$my-app-primary: mat-palette($mat-indigo);
$my-app-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$my-app-warn: mat-palette($mat-red);

//customize the background theme
$my-app-theme-background: (
    status-bar: map_get($mat-teal, 300),
    app-bar: map_get($mat-teal, 100),
    background: map_get($mat-teal, 50),
    hover: rgba(black, 0.04),
    card: white,
    dialog: white,
    disabled-button: rgba(black, 0.12),
    raised-button: white,
    focused-button: $black-6-opacity,
    selected-button: map_get($mat-grey, 300),
    selected-disabled-button: map_get($mat-grey, 400),
    disabled-button-toggle: map_get($mat-grey, 200),
);

//app theme function returns the theme from the palettes
@function my-app-theme($primary, $accent, $warn, $background) {
    @return (
        primary: $primary,
        accent: $accent,
        warn: $warn,
        is-dark: false,
        foreground: $mat-light-theme-foreground,
        background: $background
    );
}

// Create the theme object (a Sass map containing all of the palettes).
$mine-app-theme: my-app-theme($my-app-primary, $my-app-accent, $my-app-warn, $my-app-theme-background);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($mine-app-theme);
